{"version":3,"file":"static/js/855.b74a7f1e.chunk.js","mappings":"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","sources":["components/buttonsLogin/ButtonsLogin.tsx","hooks/useInputRef.tsx","pages/login/Login.tsx","validations/libraryValidations.tsx"],"sourcesContent":["import React, {FC} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport useInputRef from \"../../hooks/useInputRef\";\r\n\r\ninterface Props{\r\n    link: string;\r\n    btnRight: string;\r\n    btnLeft: string\r\n    inputFocus: ()=>void\r\n}\r\n\r\nconst ButtonsLogin:FC<Props> = ({\r\n                                    link,\r\n                                    btnRight,\r\n                                    btnLeft,\r\n                                    inputFocus}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"buttonsLogin\">\r\n\r\n            <Link to={link}>\r\n                <button className='buttonLogin'>\r\n                    {btnLeft}\r\n\r\n                </button>\r\n            </Link>\r\n\r\n            <button type='submit'\r\n                    onClick={inputFocus}\r\n                    className='buttonLogin'>\r\n                {btnRight}\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ButtonsLogin;","import {useRef} from \"react\";\r\n\r\nconst useInputRef = () => {\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const inputFocus = () =>{\r\n        inputRef.current?.focus()\r\n    }\r\n    return{inputRef, inputFocus}\r\n\r\n}\r\n\r\nexport default useInputRef","import React, {ChangeEvent, FormEvent, useState} from 'react';\r\nimport {useNavigate} from 'react-router';\r\nimport {signInWithEmailAndPassword} from 'firebase/auth'\r\nimport {auth} from '../../data/FireBaseConfig';\r\nimport TitleDecor from \"../../components/titleDecor/TitleDecor\";\r\nimport ButtonsLogin from \"../../components/buttonsLogin/ButtonsLogin\";\r\nimport {loginValidation} from \"../../validations/libraryValidations\";\r\nimport useInputRef from \"../../hooks/useInputRef\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const [inputValueLogin, setInputValueLogin] =\r\n        useState({email: \"\", password: \"\"})\r\n\r\n    const [errors, setErrors] = useState <string | string[]> ('')\r\n    const {inputFocus, inputRef} = useInputRef()\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n        setInputValueLogin({\r\n            ...inputValueLogin,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleLogin = (e: FormEvent<HTMLFormElement>):void => {\r\n        e.preventDefault()\r\n\r\n        setErrors(loginValidation(inputValueLogin))\r\n\r\n        if(loginValidation(inputValueLogin).length > 0){\r\n            return\r\n        }\r\n\r\n        signInWithEmailAndPassword(\r\n            auth,\r\n            inputValueLogin.email,\r\n            inputValueLogin.password\r\n        )\r\n            .then(() => navigate('/'))\r\n            .catch(error => setErrors(error.code))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='headerSpacer'></div>\r\n            <form onSubmit={handleLogin}\r\n                  className='wrapper wrapper--login'>\r\n\r\n                <TitleDecor text={['zaloguj się']}\r\n                            classContainer={''}\r\n                            classH2={''}\r\n                            classUnderline={'login__underline'}/>\r\n\r\n                <div className=\"login__inputs\">\r\n                    <p style={{marginBottom: \"1rem\"}}>login:&nbsp; &nbsp; ww@wp.pl <br/> password: &nbsp; &nbsp; wwwwww</p>\r\n                    <label className='login__label'>\r\n                        Email\r\n                        <input\r\n                            type='text' name='email'\r\n                            value={inputValueLogin.email}\r\n                            onChange={handleChange}\r\n                            ref={inputRef}\r\n                            className='login__input'/>\r\n                    </label>\r\n\r\n                    <label className='login__label'>\r\n                        Hasło\r\n                        <input\r\n                            type='password' name='password'\r\n                            value={inputValueLogin.password}\r\n                            onChange={handleChange}\r\n                            className='login__input'/>\r\n                    </label>\r\n                </div>\r\n\r\n                <p className='login__errors'>{errors}</p>\r\n\r\n                <ButtonsLogin link={'/rejestracja'}\r\n                              btnLeft='załuż konto'\r\n                              btnRight='zaloguj się'\r\n                              inputFocus = {inputFocus}/>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;","import {IInputValueRregister} from \"../pages/register/Register\";\r\n\r\n\r\ninterface IInputsValue {\r\n    name: string,\r\n    email: string,\r\n    message: string\r\n}\r\n\r\ninterface I_errors {\r\n    name:string,\r\n    email: string,\r\n    message: string\r\n}\r\n\r\nexport const section_5_FormValidation = (inputValue:IInputsValue) : I_errors=> {\r\n\r\n    const _errors = {name: '', email: '', message: ''}\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n    if (inputValue.name.includes(' ') || !inputValue.name) {\r\n        _errors.name = 'imię powinno być jednym wyrazem'\r\n    }\r\n    if (!inputValue.email) {\r\n        _errors.email = 'podaj email'\r\n    } else if (!reg.test(inputValue.email)) {\r\n        _errors.email = \"email jest nieprawidłowy\"}\r\n\r\n    if (inputValue.message.length < 2) {\r\n        _errors.message = 'wiadomość minimum dwa znaki'\r\n    }\r\n    return _errors\r\n}\r\n\r\n\r\nexport const registerValidation = (inputValuRregister: IInputValueRregister)\r\n    :string | string[] => {\r\n\r\n    const _errors: string[] = []\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n\r\n    if (!inputValuRregister.email) {\r\n        _errors.push('podaj email')\r\n    } else if (!reg.test(inputValuRregister.email)){\r\n        _errors.push('email jest nieprawidłowy')\r\n    }\r\n\r\n    if (inputValuRregister.password.length < 6) {\r\n        _errors.push('hasło musi mieć conajmniej 6 znaków')\r\n    }\r\n    if (inputValuRregister.passwordRepeated !== inputValuRregister.password ||\r\n        !inputValuRregister.passwordRepeated) {\r\n        _errors.push(\"hasła muszą być takie same\")\r\n    }\r\n    if (_errors.length > 0) {\r\n        return _errors.join(', ').concat('.')\r\n    }\r\n    return \"\"\r\n}\r\n\r\ninterface valueLogin{\r\n    email:string,\r\n    password: string\r\n}\r\n\r\nexport const loginValidation = (inputValueLogin: valueLogin)\r\n    : string | string[] => {\r\n\r\n    const _errors: string[] = []\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n\r\n    if (!inputValueLogin.email) {\r\n        _errors.push('podaj email')\r\n    } else if (!reg.test(inputValueLogin.email)){\r\n        _errors.push('email jest nieprawidłowy')\r\n    }\r\n\r\n    if (inputValueLogin.password.length < 6) {\r\n        _errors.push('hasło musi mieć conajmniej 6 znaków')\r\n    }\r\n    if (_errors.length > 0) {\r\n        return _errors.join(', ').concat('.')\r\n    }\r\n    return \"\"\r\n}\r\n"],"names":["link","btnRight","btnLeft","inputFocus","className","to","type","onClick","inputRef","useRef","current","focus","navigate","useNavigate","useState","email","password","inputValueLogin","setInputValueLogin","errors","setErrors","useInputRef","handleChange","e","target","name","value","onSubmit","preventDefault","loginValidation","length","signInWithEmailAndPassword","auth","then","catch","error","code","text","classContainer","classH2","classUnderline","style","marginBottom","onChange","ref","registerValidation","inputValuRregister","_errors","test","push","passwordRepeated","join","concat"],"sourceRoot":""}