{"version":3,"file":"static/js/412.60b52ec6.chunk.js","mappings":"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","sources":["components/buttonsLogin/ButtonsLogin.tsx","hooks/useInputRef.tsx","pages/register/Register.tsx","validations/libraryValidations.tsx","../node_modules/react-simple-typewriter/src/reducer.ts","../node_modules/react-simple-typewriter/src/hooks/useTypewriter.tsx","../node_modules/react-simple-typewriter/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-simple-typewriter/src/components/Cursor.tsx","../node_modules/react-simple-typewriter/src/components/Typewriter.tsx"],"sourcesContent":["import React, {FC} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport useInputRef from \"../../hooks/useInputRef\";\r\n\r\ninterface Props{\r\n    link: string;\r\n    btnRight: string;\r\n    btnLeft: string\r\n    inputFocus: ()=>void\r\n}\r\n\r\nconst ButtonsLogin:FC<Props> = ({\r\n                                    link,\r\n                                    btnRight,\r\n                                    btnLeft,\r\n                                    inputFocus}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"buttonsLogin\">\r\n\r\n            <Link to={link}>\r\n                <button className='buttonLogin'>\r\n                    {btnLeft}\r\n\r\n                </button>\r\n            </Link>\r\n\r\n            <button type='submit'\r\n                    onClick={inputFocus}\r\n                    className='buttonLogin'>\r\n                {btnRight}\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ButtonsLogin;","import {useRef} from \"react\";\r\n\r\nconst useInputRef = () => {\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const inputFocus = () =>{\r\n        inputRef.current?.focus()\r\n    }\r\n    return{inputRef, inputFocus}\r\n\r\n}\r\n\r\nexport default useInputRef","import React, {ChangeEvent, FormEvent, useRef, useState} from 'react';\r\nimport {createUserWithEmailAndPassword} from 'firebase/auth'\r\nimport {auth} from '../../data/FireBaseConfig'\r\nimport {useNavigate} from 'react-router'\r\nimport TitleDecor from \"../../components/titleDecor/TitleDecor\";\r\nimport ButtonsLogin from \"../../components/buttonsLogin/ButtonsLogin\";\r\nimport {registerValidation} from '../../validations/libraryValidations'\r\nimport useInputRef from '../../hooks/useInputRef'\r\nimport {Typewriter} from \"react-simple-typewriter\";\r\n\r\nexport interface IInputValueRregister {\r\n    email: string,\r\n    password: string,\r\n    passwordRepeated: string\r\n}\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const [inputValueRregister, setInputValueRegister] = useState<IInputValueRregister>({\r\n        email: '',\r\n        password: '',\r\n        passwordRepeated: ''\r\n    })\r\n    const [errors, setErrors] = useState<string[] | string>([])\r\n    const {inputFocus, inputRef} = useInputRef()\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setInputValueRegister({\r\n            ...inputValueRregister,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const handleRegister = (e: FormEvent<HTMLFormElement>): void => {\r\n        e.preventDefault()\r\n\r\n        setErrors(registerValidation(inputValueRregister))\r\n\r\n        if (registerValidation(inputValueRregister).length > 0) {\r\n            return\r\n        }\r\n\r\n        createUserWithEmailAndPassword(auth,\r\n            inputValueRregister.email,\r\n            inputValueRregister.password)\r\n            .then(() => navigate('/'))\r\n            .catch(error => setErrors(error.code))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='headerSpacer'></div>\r\n            <form onSubmit={handleRegister}\r\n                  className='wrapper wrapper--login'>\r\n\r\n                <TitleDecor text={['załóż konto']}\r\n                            classContainer={''}\r\n                            classH2={''}\r\n                            classUnderline={'login__underline'}/>\r\n\r\n                <div className=\"login__inputs\">\r\n\r\n                    <label className='login__label'>\r\n                        <Typewriter cursorStyle=''\r\n                                    typeSpeed={300}\r\n                                    words={[ 'Email']}/>\r\n                        <input type='text' name='email'\r\n                               value={inputValueRregister.email}\r\n                               onChange={handleChange}\r\n                               ref={inputRef}\r\n                               className='login__input'/>\r\n                    </label>\r\n\r\n                    <label className='login__label'>\r\n                        <Typewriter cursorStyle=''\r\n                                    typeSpeed={300}\r\n                                    words={['Hasło']}/>\r\n                        <input type='password' name='password'\r\n                               value={inputValueRregister.password}\r\n                               onChange={handleChange}\r\n                               className='login__input'/>\r\n                    </label>\r\n\r\n                    <label className='login__label'>\r\n                        <Typewriter cursorStyle=''\r\n                                    typeSpeed={300}\r\n                                    words={['Powtórz hasło']}/>\r\n                        <input type='password' name='passwordRepeated'\r\n                               value={inputValueRregister.passwordRepeated}\r\n                               onChange={handleChange}\r\n                               className='login__input'/>\r\n                    </label>\r\n\r\n                </div>\r\n\r\n                <p className='login__errors'>{errors}</p>\r\n\r\n                <ButtonsLogin link={'/logowanie'}\r\n                              btnRight='załuż konto'\r\n                              btnLeft='zaloguj się'\r\n                              inputFocus = {inputFocus}\r\n                />\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;","import {IInputValueRregister} from \"../pages/register/Register\";\r\n\r\n\r\ninterface IInputsValue {\r\n    name: string,\r\n    email: string,\r\n    message: string\r\n}\r\n\r\ninterface I_errors {\r\n    name:string,\r\n    email: string,\r\n    message: string\r\n}\r\n\r\nexport const section_5_FormValidation = (inputValue:IInputsValue) : I_errors=> {\r\n\r\n    const _errors = {name: '', email: '', message: ''}\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n    if (inputValue.name.includes(' ') || !inputValue.name) {\r\n        _errors.name = 'imię powinno być jednym wyrazem'\r\n    }\r\n    if (!inputValue.email) {\r\n        _errors.email = 'podaj email'\r\n    } else if (!reg.test(inputValue.email)) {\r\n        _errors.email = \"email jest nieprawidłowy\"}\r\n\r\n    if (inputValue.message.length < 2) {\r\n        _errors.message = 'wiadomość minimum dwa znaki'\r\n    }\r\n    return _errors\r\n}\r\n\r\n\r\nexport const registerValidation = (inputValuRregister: IInputValueRregister)\r\n    :string | string[] => {\r\n\r\n    const _errors: string[] = []\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n\r\n    if (!inputValuRregister.email) {\r\n        _errors.push('podaj email')\r\n    } else if (!reg.test(inputValuRregister.email)){\r\n        _errors.push('email jest nieprawidłowy')\r\n    }\r\n\r\n    if (inputValuRregister.password.length < 6) {\r\n        _errors.push('hasło musi mieć conajmniej 6 znaków')\r\n    }\r\n    if (inputValuRregister.passwordRepeated !== inputValuRregister.password ||\r\n        !inputValuRregister.passwordRepeated) {\r\n        _errors.push(\"hasła muszą być takie same\")\r\n    }\r\n    if (_errors.length > 0) {\r\n        return _errors.join(', ').concat('.')\r\n    }\r\n    return \"\"\r\n}\r\n\r\ninterface valueLogin{\r\n    email:string,\r\n    password: string\r\n}\r\n\r\nexport const loginValidation = (inputValueLogin: valueLogin)\r\n    : string | string[] => {\r\n\r\n    const _errors: string[] = []\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n\r\n    if (!inputValueLogin.email) {\r\n        _errors.push('podaj email')\r\n    } else if (!reg.test(inputValueLogin.email)){\r\n        _errors.push('email jest nieprawidłowy')\r\n    }\r\n\r\n    if (inputValueLogin.password.length < 6) {\r\n        _errors.push('hasło musi mieć conajmniej 6 znaków')\r\n    }\r\n    if (_errors.length > 0) {\r\n        return _errors.join(', ').concat('.')\r\n    }\r\n    return \"\"\r\n}\r\n","export type State = {\r\n  speed: number\r\n  text: string\r\n  count: number\r\n}\r\n\r\nexport type Action =\r\n  | { type: 'DELAY'; payload: number }\r\n  | { type: 'TYPE'; payload: string; speed: number }\r\n  | { type: 'DELETE'; payload: string; speed: number }\r\n  | { type: 'COUNT' }\r\n\r\nexport function reducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case 'TYPE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length + 1)\r\n      }\r\n    case 'DELAY':\r\n      return {\r\n        ...state,\r\n        speed: action.payload\r\n      }\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length - 1)\r\n      }\r\n    case 'COUNT':\r\n      return {\r\n        ...state,\r\n        count: state.count + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { useCallback, useEffect, useRef, useReducer } from 'react'\r\nimport { reducer } from '../reducer'\r\n\r\nexport type TypewriterProps = {\r\n  /** Callback Function that is triggered when loops are completed. available if loop is > `0` */\r\n  onLoopDone?: () => void\r\n  /** Callback Function that is triggered while typing with `typed` words count passed */\r\n  onType?: (count: number) => void\r\n  /** Callback Function that is triggered while deleting */\r\n  onDelete?: () => void\r\n  /** Callback Function that is triggered on typing delay */\r\n  onDelay?: () => void\r\n  /** Array of strings holding the words */\r\n  words: string[]\r\n  /** Control how many times to run. `0 | false` to run infinitely */\r\n  loop?: number | boolean\r\n  /** Character typing speed in Milliseconds */\r\n  typeSpeed?: number\r\n  /** Character deleting speed in Milliseconds */\r\n  deleteSpeed?: number\r\n  /** Delay time between the words in Milliseconds */\r\n  delaySpeed?: number\r\n}\r\n\r\nexport type TypewriterHelper = {\r\n  /** `true` if currently typing */\r\n  isType: boolean\r\n  /** `true` if on delay */\r\n  isDelay: boolean\r\n  /** `true` if currently deleting */\r\n  isDelete: boolean\r\n  /** `true` if all loops are done */\r\n  isDone: boolean\r\n}\r\n\r\nexport const useTypewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  onLoopDone,\r\n  onType,\r\n  onDelete,\r\n  onDelay\r\n}: TypewriterProps): [string, TypewriterHelper] => {\r\n  const [{ speed, text, count }, dispatch] = useReducer(reducer, {\r\n    speed: typeSpeed,\r\n    text: '',\r\n    count: 0\r\n  })\r\n\r\n  // Refs\r\n  const loops = useRef(0)\r\n  const isDone = useRef(false)\r\n  const isDelete = useRef(false)\r\n  const isType = useRef(false)\r\n  const isDelay = useRef(false)\r\n\r\n  const handleTyping = useCallback(() => {\r\n    const index = count % words.length\r\n    const fullWord = words[index]\r\n\r\n    if (!isDelete.current) {\r\n      dispatch({ type: 'TYPE', payload: fullWord, speed: typeSpeed })\r\n      isType.current = true\r\n\r\n      if (text === fullWord) {\r\n        dispatch({ type: 'DELAY', payload: delaySpeed })\r\n        isType.current = false\r\n        isDelay.current = true\r\n\r\n        setTimeout(() => {\r\n          isDelay.current = false\r\n          isDelete.current = true\r\n        }, delaySpeed)\r\n\r\n        if (loop > 0) {\r\n          loops.current += 1\r\n          if (loops.current / words.length === loop) {\r\n            isDelay.current = false\r\n            isDone.current = true\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      dispatch({ type: 'DELETE', payload: fullWord, speed: deleteSpeed })\r\n      if (text === '') {\r\n        isDelete.current = false\r\n        dispatch({ type: 'COUNT' })\r\n      }\r\n    }\r\n\r\n    if (isType.current) {\r\n      if (onType) onType(loops.current)\r\n    }\r\n\r\n    if (isDelete.current) {\r\n      if (onDelete) onDelete()\r\n    }\r\n\r\n    if (isDelay.current) {\r\n      if (onDelay) onDelay()\r\n    }\r\n  }, [\r\n    count,\r\n    delaySpeed,\r\n    deleteSpeed,\r\n    loop,\r\n    typeSpeed,\r\n    words,\r\n    text,\r\n    onType,\r\n    onDelete,\r\n    onDelay\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const typing = setTimeout(handleTyping, speed)\r\n\r\n    if (isDone.current) clearTimeout(typing)\r\n\r\n    return () => clearTimeout(typing)\r\n  }, [handleTyping, speed])\r\n\r\n  useEffect(() => {\r\n    if (!onLoopDone) return\r\n\r\n    if (isDone.current) {\r\n      onLoopDone()\r\n    }\r\n  }, [onLoopDone])\r\n\r\n  return [\r\n    text,\r\n    {\r\n      isType: isType.current,\r\n      isDelay: isDelay.current,\r\n      isDelete: isDelete.current,\r\n      isDone: isDone.current\r\n    }\r\n  ]\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { ReactNode, memo } from 'react'\r\nimport styles from '../styles.module.css'\r\n\r\nexport type CursorProps = {\r\n  /** Enable cursor blinking animation */\r\n  cursorBlinking?: boolean\r\n  /** Change cursor style */\r\n  cursorStyle?: ReactNode\r\n  /** Change cursor color */\r\n  cursorColor?: string\r\n}\r\n\r\nconst MemoizedCursor = ({\r\n  cursorBlinking = true,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit'\r\n}: CursorProps): JSX.Element => {\r\n  return (\r\n    <span\r\n      style={{ color: cursorColor }}\r\n      className={`${styles.blinkingCursor} ${\r\n        cursorBlinking ? styles.blinking : ''\r\n      }`}\r\n    >\r\n      {cursorStyle}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport const Cursor = memo(MemoizedCursor)\r\n","import { TypewriterProps, useTypewriter } from '../hooks/useTypewriter'\r\nimport { Cursor, CursorProps } from './Cursor'\r\n\r\ntype ComponentProps = {\r\n  /** Show / Hide the cursor */\r\n  cursor?: boolean\r\n} & TypewriterProps &\r\n  CursorProps\r\n\r\n/**\r\n * A Simple React Component for adding a nice Typewriter effect to your project.\r\n */\r\nexport const Typewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  cursor = false,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit',\r\n  cursorBlinking = true,\r\n  onLoopDone,\r\n  onType,\r\n  onDelay,\r\n  onDelete\r\n}: ComponentProps): JSX.Element => {\r\n  const [text] = useTypewriter({\r\n    words,\r\n    loop,\r\n    typeSpeed,\r\n    deleteSpeed,\r\n    delaySpeed,\r\n    onLoopDone,\r\n    onType,\r\n    onDelay,\r\n    onDelete\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <span>{text}</span>\r\n      {cursor && (\r\n        <Cursor\r\n          cursorStyle={cursorStyle}\r\n          cursorColor={cursorColor}\r\n          cursorBlinking={cursorBlinking}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"],"names":["link","btnRight","btnLeft","inputFocus","className","to","type","onClick","inputRef","useRef","current","focus","navigate","useNavigate","useState","email","password","passwordRepeated","inputValueRregister","setInputValueRegister","errors","setErrors","useInputRef","handleChange","e","target","name","value","onSubmit","preventDefault","registerValidation","length","createUserWithEmailAndPassword","auth","then","catch","error","code","text","classContainer","classH2","classUnderline","cursorStyle","typeSpeed","words","onChange","ref","inputValuRregister","_errors","test","push","join","concat","loginValidation","inputValueLogin","state","action","__assign","speed","_a","payload","substring","_b","count","useTypewriter","_c","loop","_d","_e","deleteSpeed","_f","delaySpeed","onLoopDone","onType","onDelete","onDelay","_g","useReducer","reducer","_h","dispatch","loops","isDone","isDelete","isType","isDelay","handleTyping","useCallback","index","fullWord","setTimeout","useEffect","typing","clearTimeout","css","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Cursor","memo","cursorBlinking","cursorColor","_jsx","color","s","children","exports","cursor","_j","_k","_jsxs","_Fragment"],"sourceRoot":""}