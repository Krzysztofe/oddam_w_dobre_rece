{"version":3,"file":"static/js/855.80e96e4d.chunk.js","mappings":"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","sources":["components/buttonsLogin/ButtonsLogin.tsx","hooks/useInputRef.tsx","pages/login/Login.tsx","validations/libraryValidations.tsx","../node_modules/react-simple-typewriter/src/reducer.ts","../node_modules/react-simple-typewriter/src/hooks/useTypewriter.tsx","../node_modules/react-simple-typewriter/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-simple-typewriter/src/components/Cursor.tsx","../node_modules/react-simple-typewriter/src/components/Typewriter.tsx"],"sourcesContent":["import React, {FC} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport useInputRef from \"../../hooks/useInputRef\";\r\n\r\ninterface Props{\r\n    link: string;\r\n    btnRight: string;\r\n    btnLeft: string\r\n    inputFocus: ()=>void\r\n}\r\n\r\nconst ButtonsLogin:FC<Props> = ({\r\n                                    link,\r\n                                    btnRight,\r\n                                    btnLeft,\r\n                                    inputFocus}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"buttonsLogin\">\r\n\r\n            <Link to={link}>\r\n                <button className='buttonLogin'>\r\n                    {btnLeft}\r\n\r\n                </button>\r\n            </Link>\r\n\r\n            <button type='submit'\r\n                    onClick={inputFocus}\r\n                    className='buttonLogin'>\r\n                {btnRight}\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ButtonsLogin;","import {useRef} from \"react\";\r\n\r\nconst useInputRef = () => {\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const inputFocus = () =>{\r\n        inputRef.current?.focus()\r\n    }\r\n    return{inputRef, inputFocus}\r\n\r\n}\r\n\r\nexport default useInputRef","import React, {ChangeEvent, FormEvent, useState} from 'react';\r\nimport {useNavigate} from 'react-router';\r\nimport {signInWithEmailAndPassword} from 'firebase/auth'\r\nimport {auth} from '../../data/FireBaseConfig';\r\nimport TitleDecor from \"../../components/titleDecor/TitleDecor\";\r\nimport ButtonsLogin from \"../../components/buttonsLogin/ButtonsLogin\";\r\nimport {loginValidation} from \"../../validations/libraryValidations\";\r\nimport useInputRef from \"../../hooks/useInputRef\";\r\nimport {Typewriter} from \"react-simple-typewriter\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const [inputValueLogin, setInputValueLogin] =\r\n        useState({email: \"\", password: \"\"})\r\n\r\n    const [errors, setErrors] = useState <string | string[]> ('')\r\n    const {inputFocus, inputRef} = useInputRef()\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n        setInputValueLogin({\r\n            ...inputValueLogin,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleLogin = (e: FormEvent<HTMLFormElement>):void => {\r\n        e.preventDefault()\r\n\r\n        setErrors(loginValidation(inputValueLogin))\r\n\r\n        if(loginValidation(inputValueLogin).length > 0){\r\n            return\r\n        }\r\n\r\n        signInWithEmailAndPassword(\r\n            auth,\r\n            inputValueLogin.email,\r\n            inputValueLogin.password\r\n        )\r\n            .then(() => navigate('/'))\r\n            .catch(error => setErrors(error.code))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='headerSpacer'></div>\r\n            <form onSubmit={handleLogin}\r\n                  className='wrapper wrapper--login'>\r\n\r\n                <TitleDecor text={['zaloguj siÄ™']}\r\n                            classContainer={''}\r\n                            classH2={''}\r\n                            classUnderline={'login__underline'}/>\r\n\r\n                <div className=\"login__inputs\">\r\n                    <p style={{marginBottom: \"1rem\"}}>login:&nbsp; &nbsp; ww@wp.pl <br/> password: &nbsp; &nbsp; wwwwww</p>\r\n                    <label className='login__label'>\r\n                        <Typewriter cursorStyle=''\r\n                                    typeSpeed={300}\r\n                                    words={[ 'Email']}/>\r\n                        <input\r\n                            type='text' name='email'\r\n                            value={inputValueLogin.email}\r\n                            onChange={handleChange}\r\n                            ref={inputRef}\r\n                            className='login__input'/>\r\n                    </label>\r\n\r\n                    <label className='login__label'>\r\n                        <Typewriter cursorStyle=''\r\n                                    typeSpeed={300}\r\n                                    words={[ 'HasÅ‚o']}/>\r\n                        <input\r\n                            type='password' name='password'\r\n                            value={inputValueLogin.password}\r\n                            onChange={handleChange}\r\n                            className='login__input'/>\r\n                    </label>\r\n                </div>\r\n\r\n                <p className='login__errors'>{errors}</p>\r\n\r\n                <ButtonsLogin link={'/rejestracja'}\r\n                              btnLeft='zaÅ‚uÅ¼ konto'\r\n                              btnRight='zaloguj siÄ™'\r\n                              inputFocus = {inputFocus}/>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;","import {IInputValueRregister} from \"../pages/register/Register\";\r\n\r\n\r\ninterface IInputsValue {\r\n    name: string,\r\n    email: string,\r\n    message: string\r\n}\r\n\r\ninterface I_errors {\r\n    name:string,\r\n    email: string,\r\n    message: string\r\n}\r\n\r\nexport const section_5_FormValidation = (inputValue:IInputsValue) : I_errors=> {\r\n\r\n    const _errors = {name: '', email: '', message: ''}\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n    if (inputValue.name.includes(' ') || !inputValue.name) {\r\n        _errors.name = 'imiÄ™ powinno byÄ‡ jednym wyrazem'\r\n    }\r\n    if (!inputValue.email) {\r\n        _errors.email = 'podaj email'\r\n    } else if (!reg.test(inputValue.email)) {\r\n        _errors.email = \"email jest nieprawidÅ‚owy\"}\r\n\r\n    if (inputValue.message.length < 2) {\r\n        _errors.message = 'wiadomoÅ›Ä‡ minimum dwa znaki'\r\n    }\r\n    return _errors\r\n}\r\n\r\n\r\nexport const registerValidation = (inputValuRregister: IInputValueRregister)\r\n    :string | string[] => {\r\n\r\n    const _errors: string[] = []\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n\r\n    if (!inputValuRregister.email) {\r\n        _errors.push('podaj email')\r\n    } else if (!reg.test(inputValuRregister.email)){\r\n        _errors.push('email jest nieprawidÅ‚owy')\r\n    }\r\n\r\n    if (inputValuRregister.password.length < 6) {\r\n        _errors.push('hasÅ‚o musi mieÄ‡ conajmniej 6 znakÃ³w')\r\n    }\r\n    if (inputValuRregister.passwordRepeated !== inputValuRregister.password ||\r\n        !inputValuRregister.passwordRepeated) {\r\n        _errors.push(\"hasÅ‚a muszÄ… byÄ‡ takie same\")\r\n    }\r\n    if (_errors.length > 0) {\r\n        return _errors.join(', ').concat('.')\r\n    }\r\n    return \"\"\r\n}\r\n\r\ninterface valueLogin{\r\n    email:string,\r\n    password: string\r\n}\r\n\r\nexport const loginValidation = (inputValueLogin: valueLogin)\r\n    : string | string[] => {\r\n\r\n    const _errors: string[] = []\r\n    const reg = /^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i;\r\n\r\n\r\n    if (!inputValueLogin.email) {\r\n        _errors.push('podaj email')\r\n    } else if (!reg.test(inputValueLogin.email)){\r\n        _errors.push('email jest nieprawidÅ‚owy')\r\n    }\r\n\r\n    if (inputValueLogin.password.length < 6) {\r\n        _errors.push('hasÅ‚o musi mieÄ‡ conajmniej 6 znakÃ³w')\r\n    }\r\n    if (_errors.length > 0) {\r\n        return _errors.join(', ').concat('.')\r\n    }\r\n    return \"\"\r\n}\r\n","export type State = {\r\n  speed: number\r\n  text: string\r\n  count: number\r\n}\r\n\r\nexport type Action =\r\n  | { type: 'DELAY'; payload: number }\r\n  | { type: 'TYPE'; payload: string; speed: number }\r\n  | { type: 'DELETE'; payload: string; speed: number }\r\n  | { type: 'COUNT' }\r\n\r\nexport function reducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case 'TYPE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length + 1)\r\n      }\r\n    case 'DELAY':\r\n      return {\r\n        ...state,\r\n        speed: action.payload\r\n      }\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length - 1)\r\n      }\r\n    case 'COUNT':\r\n      return {\r\n        ...state,\r\n        count: state.count + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { useCallback, useEffect, useRef, useReducer } from 'react'\r\nimport { reducer } from '../reducer'\r\n\r\nexport type TypewriterProps = {\r\n  /** Callback Function that is triggered when loops are completed. available if loop is > `0` */\r\n  onLoopDone?: () => void\r\n  /** Callback Function that is triggered while typing with `typed` words count passed */\r\n  onType?: (count: number) => void\r\n  /** Callback Function that is triggered while deleting */\r\n  onDelete?: () => void\r\n  /** Callback Function that is triggered on typing delay */\r\n  onDelay?: () => void\r\n  /** Array of strings holding the words */\r\n  words: string[]\r\n  /** Control how many times to run. `0 | false` to run infinitely */\r\n  loop?: number | boolean\r\n  /** Character typing speed in Milliseconds */\r\n  typeSpeed?: number\r\n  /** Character deleting speed in Milliseconds */\r\n  deleteSpeed?: number\r\n  /** Delay time between the words in Milliseconds */\r\n  delaySpeed?: number\r\n}\r\n\r\nexport type TypewriterHelper = {\r\n  /** `true` if currently typing */\r\n  isType: boolean\r\n  /** `true` if on delay */\r\n  isDelay: boolean\r\n  /** `true` if currently deleting */\r\n  isDelete: boolean\r\n  /** `true` if all loops are done */\r\n  isDone: boolean\r\n}\r\n\r\nexport const useTypewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  onLoopDone,\r\n  onType,\r\n  onDelete,\r\n  onDelay\r\n}: TypewriterProps): [string, TypewriterHelper] => {\r\n  const [{ speed, text, count }, dispatch] = useReducer(reducer, {\r\n    speed: typeSpeed,\r\n    text: '',\r\n    count: 0\r\n  })\r\n\r\n  // Refs\r\n  const loops = useRef(0)\r\n  const isDone = useRef(false)\r\n  const isDelete = useRef(false)\r\n  const isType = useRef(false)\r\n  const isDelay = useRef(false)\r\n\r\n  const handleTyping = useCallback(() => {\r\n    const index = count % words.length\r\n    const fullWord = words[index]\r\n\r\n    if (!isDelete.current) {\r\n      dispatch({ type: 'TYPE', payload: fullWord, speed: typeSpeed })\r\n      isType.current = true\r\n\r\n      if (text === fullWord) {\r\n        dispatch({ type: 'DELAY', payload: delaySpeed })\r\n        isType.current = false\r\n        isDelay.current = true\r\n\r\n        setTimeout(() => {\r\n          isDelay.current = false\r\n          isDelete.current = true\r\n        }, delaySpeed)\r\n\r\n        if (loop > 0) {\r\n          loops.current += 1\r\n          if (loops.current / words.length === loop) {\r\n            isDelay.current = false\r\n            isDone.current = true\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      dispatch({ type: 'DELETE', payload: fullWord, speed: deleteSpeed })\r\n      if (text === '') {\r\n        isDelete.current = false\r\n        dispatch({ type: 'COUNT' })\r\n      }\r\n    }\r\n\r\n    if (isType.current) {\r\n      if (onType) onType(loops.current)\r\n    }\r\n\r\n    if (isDelete.current) {\r\n      if (onDelete) onDelete()\r\n    }\r\n\r\n    if (isDelay.current) {\r\n      if (onDelay) onDelay()\r\n    }\r\n  }, [\r\n    count,\r\n    delaySpeed,\r\n    deleteSpeed,\r\n    loop,\r\n    typeSpeed,\r\n    words,\r\n    text,\r\n    onType,\r\n    onDelete,\r\n    onDelay\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const typing = setTimeout(handleTyping, speed)\r\n\r\n    if (isDone.current) clearTimeout(typing)\r\n\r\n    return () => clearTimeout(typing)\r\n  }, [handleTyping, speed])\r\n\r\n  useEffect(() => {\r\n    if (!onLoopDone) return\r\n\r\n    if (isDone.current) {\r\n      onLoopDone()\r\n    }\r\n  }, [onLoopDone])\r\n\r\n  return [\r\n    text,\r\n    {\r\n      isType: isType.current,\r\n      isDelay: isDelay.current,\r\n      isDelete: isDelete.current,\r\n      isDone: isDone.current\r\n    }\r\n  ]\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { ReactNode, memo } from 'react'\r\nimport styles from '../styles.module.css'\r\n\r\nexport type CursorProps = {\r\n  /** Enable cursor blinking animation */\r\n  cursorBlinking?: boolean\r\n  /** Change cursor style */\r\n  cursorStyle?: ReactNode\r\n  /** Change cursor color */\r\n  cursorColor?: string\r\n}\r\n\r\nconst MemoizedCursor = ({\r\n  cursorBlinking = true,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit'\r\n}: CursorProps): JSX.Element => {\r\n  return (\r\n    <span\r\n      style={{ color: cursorColor }}\r\n      className={`${styles.blinkingCursor} ${\r\n        cursorBlinking ? styles.blinking : ''\r\n      }`}\r\n    >\r\n      {cursorStyle}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport const Cursor = memo(MemoizedCursor)\r\n","import { TypewriterProps, useTypewriter } from '../hooks/useTypewriter'\r\nimport { Cursor, CursorProps } from './Cursor'\r\n\r\ntype ComponentProps = {\r\n  /** Show / Hide the cursor */\r\n  cursor?: boolean\r\n} & TypewriterProps &\r\n  CursorProps\r\n\r\n/**\r\n * A Simple React Component for adding a nice Typewriter effect to your project.\r\n */\r\nexport const Typewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  cursor = false,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit',\r\n  cursorBlinking = true,\r\n  onLoopDone,\r\n  onType,\r\n  onDelay,\r\n  onDelete\r\n}: ComponentProps): JSX.Element => {\r\n  const [text] = useTypewriter({\r\n    words,\r\n    loop,\r\n    typeSpeed,\r\n    deleteSpeed,\r\n    delaySpeed,\r\n    onLoopDone,\r\n    onType,\r\n    onDelay,\r\n    onDelete\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <span>{text}</span>\r\n      {cursor && (\r\n        <Cursor\r\n          cursorStyle={cursorStyle}\r\n          cursorColor={cursorColor}\r\n          cursorBlinking={cursorBlinking}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"],"names":["link","btnRight","btnLeft","inputFocus","className","to","type","onClick","inputRef","useRef","current","focus","navigate","useNavigate","useState","email","password","inputValueLogin","setInputValueLogin","errors","setErrors","useInputRef","handleChange","e","target","name","value","onSubmit","preventDefault","loginValidation","length","signInWithEmailAndPassword","auth","then","catch","error","code","text","classContainer","classH2","classUnderline","style","marginBottom","cursorStyle","typeSpeed","words","onChange","ref","registerValidation","inputValuRregister","_errors","test","push","passwordRepeated","join","concat","state","action","__assign","speed","_a","payload","substring","_b","count","useTypewriter","_c","loop","_d","_e","deleteSpeed","_f","delaySpeed","onLoopDone","onType","onDelete","onDelay","_g","useReducer","reducer","_h","dispatch","loops","isDone","isDelete","isType","isDelay","handleTyping","useCallback","index","fullWord","setTimeout","useEffect","typing","clearTimeout","css","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Cursor","memo","cursorBlinking","cursorColor","_jsx","color","s","children","exports","cursor","_j","_k","_jsxs","_Fragment"],"sourceRoot":""}